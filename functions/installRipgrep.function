#!/usr/bin/env bash
#
# Internal function to install rg and xsv

function installRipgrep() {
    local OPTIND

    help() {
        cat <<EOF
installRipgrep -- Internal function: install rg and xsv.

Installs Rust programming language, compiles rg and xsv. Handles macOS popup
requiring that developer tools be installed before using the c compiler.

Call this function only if you have determined rg is not installed.

USAGE:
    installRipgrep [OPTIONS...]

OPTIONS:
    -h      Print this message.

EXAMPLES:
    installRipgrep
EOF
    }

    while getopts ":h" opt; do
        case $opt in
        h)
            help
            waitUntil -k
            return
            ;;
        \?)
            printf "\n==> [${YELLOW}Warning${NO_COLOR}] Invalid " >&2
            printf "${YELLOW}-$OPTARG${NO_COLOR} option in: " >&2
            printf "${YELLOW}$0>installRipgrep${NO_COLOR}.\n" >&2
            ;;
        :)
            printf "\n==> [${RED}Error${NO_COLOR}] Option ${RED}-$OPTARG${NO_COLOR} " >&2
            printf "in: ${RED}$0>installRipgrep${NO_COLOR} requires an argument.\n" >&2
            ;;
        esac
    done
    shift $((OPTIND - 1))

    function enable_macOS_cc() {
        # Need a failproof way to determine whether compiling rg will work
        # Xcode is installed
        [[ -d "/Applications/Xcode.app" ]] && return
        # Used git to download IMDb_xref
        [[ -e ".git/config" ]] && return
        cat <<EOF

On macOS, compiling rg requires the command line developer tools. This may
cause a popup asking if you would like to install the tools. You don't need to
"Get Xcode". Just Click the "Install" button. This can take a minute or more.
EOF
        waitUntil -k
        # This should trigger the popup
        xcode-select --install >/dev/null 2>/dev/null
        #
        if ! waitUntil "$YN_PREF" "Have you completed installing the developer tools?"; then
            printf "\n==> [${RED}Error${NO_COLOR}] Missing the macOS developer tools.\n" >&2
            printf "    Please install the developer tools, then re-run this script.\n" >&2
            exit 1
        fi
    }

    # Explain what we're planning
    cat <<EOT-1

This script uses the program rg (ripgrep) to quickly search compressed files. It
will optionally use the program xsv to improve table column layout, especially
for non-English names by using "elastic tabs".

Full details, including various ways to install them are covered at
https://crates.io/crates/ripgrep and https://crates.io/crates/xsv.

One simple way to install them is by typing these commands in a terminal window.

EOT-1

    # Skip the cargo instructions if it's already installed
    if ! checkForExecutable -q cargo; then
        cat <<EOT-2
    # Install the Rust programming language
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    source ~/.cargo/env

EOT-2
    fi

    cat <<EOT-3
    # Install rg
    cargo install ripgrep

    # Install xsv
    cargo install xsv

EOT-3

    # Done with instructions. Time to install rust, rg, & xsv
    if waitUntil "$YN_PREF" -N "==> Would you prefer I do the installation for you?"; then
        # On macOS, you may need to install the developer tools
        [[ "$(uname -sm)" == "Darwin x86_64" ]] && enable_macOS_cc
        #
        # Install Rust if needed
        if ! checkForExecutable -q cargo; then
            checkForExecutable curl
            printf "\n==> Installing the Rust programming language.\n\n"
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh 2>/dev/null
            # shellcheck source=/dev/null      # ~/.cargo/env is created above
            source ~/.cargo/env
            #
            if checkForExecutable -q cargo; then
                printf "\n==> We've sucessfully installed and configured "
                printf "the Rust programming language.\n"
            else
                printf "\n==> [${RED}Error${NO_COLOR}] We were unable to install"
                printf "the Rust programming language.\n"
                printf "    Please install rg, then re-run this script.\n"
                exit 1
            fi
            waitUntil -k
        fi
        #
        printf "==> Installing rg. This can take several minutes.\n\n"
        cargo install -q ripgrep
        #
        printf "==> Installing xsv. This can take a minute or more.\n\n"
        cargo install -q xsv
        #
        return
    else
        printf "\n==> [${RED}Error${NO_COLOR}] Unable to run required program 'rg'.\n" >&2
        printf "    Please install rg, then re-run this script.\n" >&2
        exit 1
    fi
}

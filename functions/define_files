#!/usr/bin/env bash
#
# Define standard files required by other scripts, create them if they don't exist
#
# USAGE:
#   source functions/define_files
#
# NOTES:
#   Should appear in the initial stanza of all non-trivial scripts, even if they are not
#   yet used Put the string "files" in the environment variable DEBUG_XREF to turn on
#   debugging
#
# EXAMPLE:
#       # Make sure we are in the correct directory
#       DIRNAME=$(dirname "$0")
#       cd "$DIRNAME" || exit
#
#       source functions/define_colors  # Only if you want colors to be used in output
#       source functions/define_files
#       source functions/load_functions

# Standard files
mkdir -p ~/.config/IMDb_xref
configFile=~/.config/IMDb_xref/config

# Remove invalid configFile if one exists
[[ -e $configFile ]] && [[ "$(grep -c YN_PREF "$configFile")" -eq 0 ]] &&
    rm -f "$configFile"

[[ ! -e $configFile ]] && cat <<EOF >>"$configFile"
#!/usr/bin/env bash
#
# This is the IMDb_xref configuration file. Each line either contains a comment
# or an environment variable to be set before the start of any IMDb_xref script.

# YN_PREF - set the style of answering yes/no questions.such as:
#       Should I create a George Clooney filmography? [y/n]
# The default (YN_PREF="-s") returns as soon as a y or n is typed. No <cr> required.
# The long form (YN_PREF="-l ") requires you to type a <cr> after the y or n.
# In either case, a <cr> selects the capital letter in a [Y/n] or [y/N] pair.
YN_PREF="-s"

# NEED_PREFS - set to yes by default, unset once setPreferences.sh is run
NEED_PREFS="yes"
EOF

# Don't create this because user can override the name
# Each one represents and can be used to reconstruct a single search
favoritesFile="favorites.tconst"

durationFile=".xref_durations"
[[ ! -e $durationFile ]] && touch "$durationFile"

numRecordsFile=".xref_numRecords"
[[ ! -e $numRecordsFile ]] && touch "$numRecordsFile"

# Cleared by downloadIMDbFiles
cacheDirectory=".xref_cache"
mkdir -p "$cacheDirectory"

histDirectory=".xref_history"
mkdir -p "$histDirectory"

gzFiles=(name.basics.tsv.gz title.basics.tsv.gz title.episode.tsv.gz
    title.principals.tsv.gz)

# Look for the string "files" in $DEBUG_XREF to enable debugging
if [[ $DEBUG_XREF == *"files"* ]]; then
    printf "[${YELLOW}Debug-files${NO_COLOR}] Running:              $PWD/$(basename "$0")\n" >&2
    printf "[${YELLOW}Debug-files${NO_COLOR}] Using configFile:     $PWD/$configFile\n" >&2
    printf "[${YELLOW}Debug-files${NO_COLOR}] Using durationFile:   $PWD/$durationFile\n" >&2
fi
